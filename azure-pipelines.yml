# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - develop
      - release
      - master
  paths:
    include:
    - src
    - bin
    - public
    - azure-pipelines.yml

pool:
  vmImage: 'Ubuntu-latest'
  
steps:
- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    yarn install
    sh build.sh
    docker login -u restry -p ${token}

    docker push restry/general-db-connecter:latest 
  displayName: 'yarn install & push'

# - task: ArchiveFiles@2
#   inputs:
#     rootFolderOrFile: '$(Build.SourcesDirectory)/dist'
#     includeRootFolder: false
#     archiveFile: '$(Build.ArtifactStagingDirectory)/hosts.zip'
#     replaceExistingArchive: true

# - task: PublishBuildArtifacts@1

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'AzureChinaVerified'
#     appType: 'webApp'
#     WebAppName: 'auction'
#     packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'
#     ScriptType: 'Inline Script'
#     InlineScript: 'npm install'
    
    
# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectedServiceName: 'Visual Studio Enterprise(1fb2f34c-52f9-4a67-94a3-08006774a48c)'
#     WebAppKind: 'webAppLinux'
#     WebAppName: 'windart-origin-api'
#     Package: '$(Build.ArtifactStagingDirectory)/hosts.zip'
#     RuntimeStack: 'NODE|10.14'
#     StartupCommand: 'node production.js'

# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectedServiceName: 'AzureChinaVerified'
#     WebAppName: 'windart-api'
#     Package: '$(Build.ArtifactStagingDirectory)/hosts.zip'


