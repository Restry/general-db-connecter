{"version":3,"sources":["../../../src/routes/api.js"],"names":["express","require","router","Router","multer","upload","ObjectId","ensureLoggedIn","removeProcessor","data","avliableKeys","Object","keys","forEach","value","a","startsWith","endsWith","replace","$ne","toLocaleLowerCase","JSON","parse","Number","where","assign","error","console","executeFuction","dbo","func","query","params","map","k","script","join","eval","getTable","table","_id","log","execute","collection","find","querys","$fields","split","project","$limit","limit","parseInt","$skip","skip","$sort","sort","$sortdesc","toArray","get","req","res","send","db","connect","dataBase","then","name","r","json","catch","err","stringify","finally","post","body","user","status","objToInsert","base","createCollection","method","Array","isArray","created","Date","modified","o","c","put","updateMany","upsert","delete","options","push","concat","length","deleteMany","$in","any","obj","file","Binary","files","buffer","insert","insertedIds","documents","writeHead","type","encodeURIComponent","fileName","size","end","Buffer","module","exports"],"mappings":"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","file":"api.js","sourcesContent":["const express = require('express');\nconst router = express.Router();\nvar multer = require('multer');\nimport {dataBase} from '../config';\nimport db from '../utils/db';\n\nvar upload = multer();\nvar ObjectId = require('mongodb').ObjectId\nconst { ensureLoggedIn } = require('connect-ensure-login');\n\nconst removeProcessor = (data) => {\n  const avliableKeys = {}\n  try {\n    Object.keys(data).forEach(a => {\n      const value = data[a];\n      if (!a.startsWith('$')) {\n        if (a.endsWith('$')) { // 以$结尾表示 不等于\n          avliableKeys[a.replace('$', '')] = {\n            $ne: value\n          };\n        } else if (typeof value === 'string' &&\n          (value.toLocaleLowerCase() === 'true' || value.toLocaleLowerCase() === 'false')) {\n          avliableKeys[a] = JSON.parse(value);\n        }\n        else {\n          avliableKeys[a] = Number(value) ? Number(value) : value;\n        }\n      } else if (a === '$where' && value) {\n        const where = JSON.parse(value); // 通过JSON序列化回来的字符串可以保留基础类型\n        Object.assign(avliableKeys, where);\n      }\n    })\n\n    // console.log('avliableKeys', avliableKeys)\n  } catch (error) {\n    console.error(error);\n  }\n  return avliableKeys;\n}\n\nconst executeFuction = (dbo, func, query) => {\n  const params = Object.keys(query).map(k => query[k]);\n  const script = `${func}('${params.join(\"','\")}')`;\n  return dbo.eval(script);\n}\n\nconst getTable = (dbo, table, query) => {\n  const data = query;\n  if (data._id) {\n    data._id = ObjectId(data._id);\n  }\n  console.log(`get table`);\n  let execute = dbo.collection(table).find(removeProcessor(data) || {});\n  let querys = null;\n  if (data.$fields) {\n    querys = {};\n    data.$fields.split(',').forEach(a => querys[a] = 1);\n    execute = execute.project(querys)\n  }\n  if (data.$limit) {\n    execute = execute.limit(parseInt(data.$limit))\n  }\n  if (data.$skip) {\n    execute = execute.skip(parseInt(data.$skip))\n  }\n  if (data.$sort) {\n    const sort = {}\n    sort[data.$sort] = 1;\n    execute = execute.sort(sort)\n  }\n  if (data.$sortdesc) {\n    const sort = {}\n    sort[data.$sortdesc] = -1;\n    execute = execute.sort(sort)\n  }\n\n  return execute.toArray();\n};\n\nrouter.get('/',(req,res)=>{\n  res.send('api was ready');\n})\n\nrouter.get('/js/:name', (req, res) => {\n  db.connect(dataBase).then((dbo) => executeFuction(dbo, req.params.name, req.query)).then((r) => {\n    res.json(r);\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n  }).finally(() => {\n  })\n})\nrouter.post('/js/:name', (req, res) => {\n  db.connect(dataBase).then((dbo) => {\n    const params = Object.keys(req.body).map(k => req.body[k]);\n    const script = `${req.params.name}('${params.join(\"','\")}')`;\n    return dbo.eval(script);\n  }).then((r) => {\n    res.json(r);\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n  }).finally(() => {\n    // createConnection.close();\n  })\n});\n\nrouter.get('/:table', (req, res) => {\n  console.log(`${dataBase}, get table`, req.params.table, req.query);\n  db.connect(dataBase).then((dbo) => getTable(dbo, req.params.table, req.query)).then((r) => {\n    // setTimeout(() => {\n    res.json(r);\n    // res.send(JSON.stringify(r));\n    // }, Math.random() * 1000);\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n    // db.close();\n  }).finally(() => {\n    // db.close();\n  })\n})\n\n//取表中，总条数\n// router.get('/Count/:table', (req, res) => {\n//   db.open(dataBase).then((dbo) => {\n//     const data = req.query;\n\n//     if (data._id) {\n//       data._id = ObjectId(data._id);\n//     }\n\n//     let execute = dbo.collection(req.params.table).find(removeProcessor(data) || {});\n//     return execute.toArray();\n//   }).then((r) => {\n//     // setTimeout(() => {\n//     res.send(JSON.stringify({ 'total': r.length }));\n//     // }, Math.random() * 1000);\n//   }).catch((err) => {\n//     res.send(JSON.stringify(err));\n//   }).finally(() => {\n//     db.close();\n//   })\n// })\n\nrouter.post('/:table', (req, res) => {\n  if (!req.user) { res.status(401).json({ status: 401 }); return; }\n  var objToInsert = req.body;\n  db.connect(dataBase).then((dbo, base) => dbo.createCollection(req.params.table)).then(r => {\n    // const obj = req.body;\n    let method = 'insertOne';\n    if (Array.isArray(objToInsert)) {\n      method = 'insertMany';\n      objToInsert.forEach(a => { a.created = new Date(); a.modified = new Date(); });\n    } else {\n      objToInsert.created = new Date();\n      objToInsert.modified = new Date();\n    }\n    return r[method](objToInsert);\n  }).then((r, o, c) => {\n    res.json({ r, objToInsert, c });\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n    // db.close();\n  }).finally(() => {\n    // db.close();\n  })\n})\n\nrouter.put('/:table', (req, res) => {\n  if (!req.user) { res.status(401).json({ status: 401 }); return; }\n  db.connect(dataBase).then((dbo) => {\n    const data = req.query;\n    const body = req.body;\n    if (data._id) {\n      data._id = ObjectId(data._id);\n    }\n    body.modified = new Date();\n\n    return dbo.collection(req.params.table).updateMany(data || {}, {\n      \"$set\": body\n    }, { upsert: true });\n  }).then((r) => {\n    res.json(r);\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n  }).finally(() => {\n    // createConnection.close();\n  })\n})\n\nrouter.delete('/:table', (req, res) => {\n  if (!req.user) { res.status(401).json({ status: 401 }); return; }\n  db.connect(dataBase).then((dbo) => {\n    const data = req.query;\n    let options = [];\n\n    if (data && data._id) {\n      options.push(data._id);\n    } else if (req.body && Array.isArray(req.body)) {\n      options = options.concat(req.body);\n    }\n    if (options.length == 0) throw \"cannot find delete prarms\";\n\n    return dbo.collection(req.params.table).deleteMany({\n      \"_id\": {\n        $in: options.map(a => ObjectId(a))\n      }\n    });\n  }).then((r) => {\n    res.json(r);\n    // res.send(JSON.stringify(r));\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n  }).finally(() => {\n    // createConnection.close();\n  })\n})\n\nrouter.post('/:table/upload', upload.any(), (req, res) => {\n\n  db.connect(dataBase).then((dbo) => dbo.createCollection(req.params.table)).then(r => {\n    const obj = req.body;\n    obj.file = Binary(req.files[0].buffer)\n\n    return r.insert(obj);\n  }).then((r, o, c) => {\n    res.status(200).send(r.insertedIds);\n  }).catch((err) => {\n    res.send(JSON.stringify(err));\n  }).finally(() => {\n    // createConnection.close();\n  })\n})\n\nrouter.get('/:table/download', (req, res) => {\n\n  db.connect(dataBase).then((dbo) => dbo.createCollection(req.params.table)).then(r => {\n    const data = req.query;\n    if (data._id) {\n      data._id = ObjectId(data._id);\n    }\n\n    return r.find(data || {}).toArray()\n  }).then(function (documents, err, ) {\n    if (err) console.error(err);\n\n    const file = documents[0].file;\n\n    res.writeHead(200, {\n      'Content-Type': documents[0].type,\n      'Content-disposition': 'attachment;filename=' + encodeURIComponent(documents[0].fileName),\n      'Content-Length': documents[0].size\n    });\n    res.end(new Buffer(file.buffer, 'binary'));\n\n  })\n})\n\n// 拼图api\n\n\nmodule.exports = { router, executeFuction, getTable };\n"]}